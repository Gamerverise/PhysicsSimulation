
===== Primordial ================================================================

primordial tokens {
    escape_char                     -> \
    quote_char                      -> "
    whitespace                      -> "(\ \t\n)+"
    special_char                    -> ~ ` ! @ # $ % ^ & * ( ) - + = [ ] { } \ | ; : ' " , . < > / ?
    lex                             -> lex
    parse                           -> parse
}

===== Regular Expression Macros ====================================================================

lex macros {
    empty                     -> ""

    tab                       -> "\t"
    newline                   -> "\n"

    whitespace                -> "( \t\n)+"
    opt_whitespace            -> "( \t\n)*"
    non_whitespace            -> "[^ \t\n]+"

    lower_case_letter         -> "[a-z]"
    upper_case_letter         -> "[A-Z]"
    letter                    -> "[a-z][A-Z]"

    digit                     -> "[0-9]"
    non_zero_digit            -> "[1-9]"

    alpha_numeric             -> "[a-z][A-Z][0-9]"

    two_digits                -> "(:digit:)(:digit:)"

    starting_digits           -> "(:non_zero_digit:)"
                                       "(:non_zero_digit:)(:digit:)"
                                       "(:non_zero_digit:)(:two_digits:)"
}

===== Primitives ================================================================

lex primitives {

    ----- Numbers ----------------------------------------------------------------

    pos_int                         -> "(:non_zero_digit:)(:digit:)*"
    neg_int                         -> "-(:pos_int:)"
    natural                         -> "0" "(:pos_int:)"

    int                             -> "(:pos_int:)"
                                       "0"
                                       "(:pos_int:)"

    ----- Boolean -----------------------------------------------------------------

    boolean                         -> "true"
                                       "false"

    ----- String ------------------------------------------------------------------

    quote_char                      -> "\""
    string                          -> "(:quote_char:).*(:quote_char:)"
}

===== Identifiers ===============================================================

lex identifiers {
    id                              -> "[_(:alpha_numeric:)]+"
    std_id                          -> "[_(:letter:)][_(:alpha_numeric:)]*"
}

===== Keywords ==================================================================

lex keywords {
    version
    target
    namespace
    local
    lex
    parse
    native
    clear
    delete
}

===== Target Languages ==========================================================

lex languages {
    bash
    java
    edsl
}

===== Comments ====================================================================

lex single_line_comment {
    slc_start_char            -> "[^_(:alpha_numeric:)(:whitespace:)]"
    "(:slc_start_char:){4}.*(:newline:)"
}

lex mlc_start {
    "\*comment\*"
    "\*notes\*"
    "\*note\*"
    "\*documentation\*"
    "\*doc\*"
}

lex mlc_end {
    "\*end\*"
}

lex multi_line_comment {
    "(:mlc_start:).*(:mlc_end:)"
    "(:non_id_char:)(:non_id_char:)(:non_id_char:)(:non_id_char:)+"}
}
